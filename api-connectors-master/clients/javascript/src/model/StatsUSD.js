/**
 * BitMEX API
 * ## REST API for the BitMEX Trading Platform  [View Changelog](/app/apiChangelog)    #### Getting Started   ##### Fetching Data  All REST endpoints are documented below. You can try out any query right from this interface.  Most table queries accept `count`, `start`, and `reverse` params. Set `reverse=true` to get rows newest-first.  Additional documentation regarding filters, timestamps, and authentication is available in [the main API documentation](https://www.bitmex.com/app/restAPI).  *All* table data is available via the [Websocket](/app/wsAPI). We highly recommend using the socket if you want to have the quickest possible data without being subject to ratelimits.  ##### Return Types  By default, all data is returned as JSON. Send `?_format=csv` to get CSV data or `?_format=xml` to get XML data.  ##### Trade Data Queries  *This is only a small subset of what is available, to get you started.*  Fill in the parameters and click the `Try it out!` button to try any of these queries.  * [Pricing Data](#!/Quote/Quote_get)  * [Trade Data](#!/Trade/Trade_get)  * [OrderBook Data](#!/OrderBook/OrderBook_getL2)  * [Settlement Data](#!/Settlement/Settlement_get)  * [Exchange Statistics](#!/Stats/Stats_history)  Every function of the BitMEX.com platform is exposed here and documented. Many more functions are available.  ##### Swagger Specification  [â‡© Download Swagger JSON](swagger.json)    ## All API Endpoints  Click to expand a section. 
 *
 * OpenAPI spec version: 1.2.0
 * Contact: support@bitmex.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';





/**
* The StatsUSD model module.
* @module model/StatsUSD
* @version 1.2.0
*/
export default class StatsUSD {
    /**
    * Constructs a new <code>StatsUSD</code>.
    * @alias module:model/StatsUSD
    * @class
    * @param rootSymbol {String} 
    */

    constructor(rootSymbol) {
        

        
        

        this['rootSymbol'] = rootSymbol;

        
    }

    /**
    * Constructs a <code>StatsUSD</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/StatsUSD} obj Optional instance to populate.
    * @return {module:model/StatsUSD} The populated <code>StatsUSD</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StatsUSD();

            
            
            

            if (data.hasOwnProperty('rootSymbol')) {
                obj['rootSymbol'] = ApiClient.convertToType(data['rootSymbol'], 'String');
            }
            if (data.hasOwnProperty('currency')) {
                obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
            }
            if (data.hasOwnProperty('turnover24h')) {
                obj['turnover24h'] = ApiClient.convertToType(data['turnover24h'], 'Number');
            }
            if (data.hasOwnProperty('turnover30d')) {
                obj['turnover30d'] = ApiClient.convertToType(data['turnover30d'], 'Number');
            }
            if (data.hasOwnProperty('turnover365d')) {
                obj['turnover365d'] = ApiClient.convertToType(data['turnover365d'], 'Number');
            }
            if (data.hasOwnProperty('turnover')) {
                obj['turnover'] = ApiClient.convertToType(data['turnover'], 'Number');
            }
        }
        return obj;
    }

    /**
    * @member {String} rootSymbol
    */
    rootSymbol = undefined;
    /**
    * @member {String} currency
    */
    currency = undefined;
    /**
    * @member {Number} turnover24h
    */
    turnover24h = undefined;
    /**
    * @member {Number} turnover30d
    */
    turnover30d = undefined;
    /**
    * @member {Number} turnover365d
    */
    turnover365d = undefined;
    /**
    * @member {Number} turnover
    */
    turnover = undefined;








}


