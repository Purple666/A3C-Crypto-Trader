//
// Settlement.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** Historical Settlement Data */

open class Settlement: Codable {

    public var timestamp: Date
    public var symbol: String
    public var settlementType: String?
    public var settledPrice: Double?
    public var bankrupt: Double?
    public var taxBase: Double?
    public var taxRate: Double?


    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encode(timestamp, forKey: "timestamp")
        try container.encode(symbol, forKey: "symbol")
        try container.encodeIfPresent(settlementType, forKey: "settlementType")
        try container.encodeIfPresent(settledPrice, forKey: "settledPrice")
        try container.encodeIfPresent(bankrupt, forKey: "bankrupt")
        try container.encodeIfPresent(taxBase, forKey: "taxBase")
        try container.encodeIfPresent(taxRate, forKey: "taxRate")
    }

    // Decodable protocol methods
    
    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        timestamp = try container.decode(Date.self, forKey: "timestamp")
        symbol = try container.decode(String.self, forKey: "symbol")
        settlementType = try container.decodeIfPresent(String.self, forKey: "settlementType")
        settledPrice = try container.decodeIfPresent(Double.self, forKey: "settledPrice")
        bankrupt = try container.decodeIfPresent(Double.self, forKey: "bankrupt")
        taxBase = try container.decodeIfPresent(Double.self, forKey: "taxBase")
        taxRate = try container.decodeIfPresent(Double.self, forKey: "taxRate")
    }
}

