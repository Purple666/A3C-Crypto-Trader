//
// Liquidation.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** Active Liquidations */

open class Liquidation: Codable {

    public var orderID: String
    public var symbol: String?
    public var side: String?
    public var price: Double?
    public var leavesQty: Double?


    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encode(orderID, forKey: "orderID")
        try container.encodeIfPresent(symbol, forKey: "symbol")
        try container.encodeIfPresent(side, forKey: "side")
        try container.encodeIfPresent(price, forKey: "price")
        try container.encodeIfPresent(leavesQty, forKey: "leavesQty")
    }

    // Decodable protocol methods
    
    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        orderID = try container.decode(String.self, forKey: "orderID")
        symbol = try container.decodeIfPresent(String.self, forKey: "symbol")
        side = try container.decodeIfPresent(String.self, forKey: "side")
        price = try container.decodeIfPresent(Double.self, forKey: "price")
        leavesQty = try container.decodeIfPresent(Double.self, forKey: "leavesQty")
    }
}

