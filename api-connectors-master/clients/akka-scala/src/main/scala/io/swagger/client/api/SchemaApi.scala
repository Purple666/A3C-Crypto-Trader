/**
 * NOTE: This class is auto generated by the akka-scala (beta) swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * For any issue or feedback, please open a ticket via https://github.com/swagger-api/swagger-codegen/issues/new
 */
package io.swagger.client.api

import io.swagger.client.model.Error
import io.swagger.client.core._
import io.swagger.client.core.CollectionFormats._
import io.swagger.client.core.ApiKeyLocations._

object SchemaApi {

  /**
   * 
   * 
   * Expected answers:
   *   code 200 : Any (Request was successful)
   *   code 400 : Error (Parameter Error)
   *   code 401 : Error (Unauthorized)
   *   code 404 : Error (Not Found)
   * 
   * @param model Optional model filter. If omitted, will return all models.
   */
  def schema.get(model: Option[String] = None): ApiRequest[Any] =
    ApiRequest[Any](ApiMethods.GET, "https://localhost/api/v1", "/schema", "application/json")
      .withQueryParam("model", model)
      .withSuccessResponse[Any](200)
      .withErrorResponse[Error](400)
      .withErrorResponse[Error](401)
      .withErrorResponse[Error](404)
        /**
   * 
   * 
   * Expected answers:
   *   code 200 : Any (Request was successful)
   *   code 400 : Error (Parameter Error)
   *   code 401 : Error (Unauthorized)
   *   code 404 : Error (Not Found)
   */
  def schema.websocketHelp(): ApiRequest[Any] =
    ApiRequest[Any](ApiMethods.GET, "https://localhost/api/v1", "/schema/websocketHelp", "application/json")
      .withSuccessResponse[Any](200)
      .withErrorResponse[Error](400)
      .withErrorResponse[Error](401)
      .withErrorResponse[Error](404)
      

}

